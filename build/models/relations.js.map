{"version":3,"sources":["../../src/models/relations.js"],"names":["port","process","env","PORT","Address","require","Post","PostContent","PostRate","Image","Avatar","Product","User","Cart","CartItem","Order","OrderItem","sequelize","topfeed","hasMany","hasOne","belongsTo","onDelete","constraints","belongsToMany","through","sync","then","cart","app","listen","console","log","err"],"mappings":";;AACA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAMM,OAAO,GAAGN,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,eAAD,CAApB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,eAAD,CAApB;;AACA,IAAMS,QAAQ,GAAGT,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMU,KAAK,GAAGV,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAMW,SAAS,GAAGX,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMY,SAAS,GAAGZ,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMa,OAAO,GAAGb,OAAO,CAAC,kBAAD,CAAvB,C,CAMA;AACA;AACA;AAEA;;;AACAO,IAAI,CAACO,OAAL,CAAaf,OAAb,E,CACA;;AACAQ,IAAI,CAACQ,MAAL,CAAYV,MAAZ,E,CACA;;AACAA,MAAM,CAACW,SAAP,CAAiBT,IAAjB;AACAN,IAAI,CAACe,SAAL,CAAeT,IAAf,EAAqB;AACjBU,EAAAA,QAAQ,EAAE;AADO,CAArB,E,CAGA;;AAEAd,QAAQ,CAACa,SAAT,CAAmBf,IAAnB,EAAyB;AACrBiB,EAAAA,WAAW,EAAE,IADQ;AAErBD,EAAAA,QAAQ,EAAE;AAFW,CAAzB;AAIAhB,IAAI,CAACa,OAAL,CAAaX,QAAb;AACAA,QAAQ,CAACa,SAAT,CAAmBT,IAAnB,EAAyB;AACrBW,EAAAA,WAAW,EAAE,IADQ;AAErBD,EAAAA,QAAQ,EAAE;AAFW,CAAzB;AAIAhB,IAAI,CAACa,OAAL,CAAaV,KAAb,E,CACA;;AACAA,KAAK,CAACY,SAAN,CAAgBf,IAAhB;AAEAO,IAAI,CAACQ,SAAL,CAAeT,IAAf,EAAqB;AACjBW,EAAAA,WAAW,EAAE,IADI;AAEjBD,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAIAV,IAAI,CAACQ,MAAL,CAAYP,IAAZ;AACAA,IAAI,CAACW,aAAL,CAAmBb,OAAnB,EAA4B;AACxBc,EAAAA,OAAO,EAAEX;AADe,CAA5B;AAGAH,OAAO,CAACa,aAAR,CAAsBX,IAAtB,EAA4B;AACxBY,EAAAA,OAAO,EAAEX;AADe,CAA5B;AAGAC,KAAK,CAACM,SAAN,CAAgBT,IAAhB,EAAsB;AAClBW,EAAAA,WAAW,EAAE,IADK;AAElBD,EAAAA,QAAQ,EAAE;AAFQ,CAAtB;AAIAV,IAAI,CAACO,OAAL,CAAaJ,KAAb;AACAA,KAAK,CAACS,aAAN,CAAoBb,OAApB,EAA6B;AACzBc,EAAAA,OAAO,EAAET;AADgB,CAA7B,E,CAKA;;AACAC,SAAS,CACL;AACA;AACA;AAHK,CAIJS,IAJL,GAKI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBJ,CAoBKC,IApBL,CAoBU,UAAAC,IAAI,EAAI;AACVC,EAAAA,GAAG,CAACC,MAAJ,CAAW9B,IAAX,EAAiB+B,OAAO,CAACC,GAAR,6BAAiChC,IAAjC,EAAjB;AACH,CAtBL,WAuBW,UAAAiC,GAAG,EAAI;AACVF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH,CAzBL","sourcesContent":["\nconst port = process.env.PORT || 8080;\n\nconst Address = require('./models/address');\nconst Post = require('./models/post');\nconst PostContent = require('./models/postContent');\nconst PostRate = require('./models/postRate');\nconst Image = require('./models/image');\nconst Avatar = require('./models/avatar');\nconst Product = require('./models/product');\nconst User = require('./models/user');\nconst Cart = require('./models/cart');\nconst CartItem = require('./models/cart-item');\nconst Order = require('./models/order');\nconst OrderItem = require('./models/order-item');\nconst sequelize = require('./util/database');\nconst topfeed = require('./routes/topfeed');\n\n\n\n\n\n/////////////////////////////////////    Relation /////////////////////////////////////\n// Man.hasOne(RightArm);\n// RightArm.belongsTo(Man);\n\n//Address.belongsTo(User, { constraints: true, onDelete: 'CASCADE' });\nUser.hasMany(Address);\n//User.hasMany(Avatar);\nUser.hasOne(Avatar);\n//User.hasOne(Avatar);\nAvatar.belongsTo(User);\nPost.belongsTo(User, {\n    onDelete: 'CASCADE'\n});\n//User.hasMany(Post); //One-to-many\n\nPostRate.belongsTo(Post, {\n    constraints: true,\n    onDelete: 'CASCADE'\n})\nPost.hasMany(PostRate)\nPostRate.belongsTo(User, {\n    constraints: true,\n    onDelete: 'CASCADE'\n})\nPost.hasMany(Image)\n//PostContent.hasMany(Image)\nImage.belongsTo(Post)\n\nCart.belongsTo(User, {\n    constraints: true,\n    onDelete: 'CASCADE'\n});\nUser.hasOne(Cart);\nCart.belongsToMany(Product, {\n    through: CartItem\n});\nProduct.belongsToMany(Cart, {\n    through: CartItem\n});\nOrder.belongsTo(User, {\n    constraints: true,\n    onDelete: 'CASCADE'\n});\nUser.hasMany(Order);\nOrder.belongsToMany(Product, {\n    through: OrderItem\n});\n\n\n////////////////////////////////     DB    /////////////////////////////////////\nsequelize\n    // .sync({\n    //     force: true\n    // })\n    .sync()\n    // .then(result => {\n    //     return User.findAll();\n    //     // console.log(result);\n    // })\n    // .then(user => {\n    //     console.log(user[0]);\n\n    //     if (!user[0]) {\n    //         return User.create({\n    //             firstname: 'Max',\n    //             email: 'test@test.com'\n    //         });\n    //     }\n    //     return user;\n    // })\n    .then(cart => {\n        app.listen(port, console.log(`Listening on port ${port}`));\n    })\n    .catch(err => {\n        console.log(err);\n    });"],"file":"relations.js"}