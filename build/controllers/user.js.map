{"version":3,"sources":["../../src/controllers/user.js"],"names":["exports","postAvatar","req","res","next","files","length","error","Error","statusCode","imageRef","path","models","Avatar","findOne","where","userId","then","avatar","update","User","findByPk","user","create","setAvatar","status","json","err","getProfile","include","model","attributes","Address","undefined","addresses","updateProfile","body","updateAdresse","address","setAddresses","getAvatar"],"mappings":"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","sourcesContent":["import models from \"../setup/models\";\n\nexports.postAvatar = (req, res, next) => {\n  if (!req.files || req.files.length == 0) {\n    const error = new Error(\"No image provided.\");\n    error.statusCode = 422;\n    throw error;\n  }\n  const imageRef = req.files[0].path;\n  models.Avatar.findOne({ where: { userId: req.userId } })\n    .then(avatar => {\n      if (avatar) {\n        avatar.update({ imageRef: imageRef });\n      } else {\n        models.User.findByPk(req.userId).then(user => {\n          models.Avatar.create({\n            imageRef: imageRef\n          }).then(avatar => {\n            user.setAvatar(avatar);\n            //User.update({AvatarId: avatar.id})\n          });\n        });\n      }\n    })\n    .then(() => {\n      res.status(201).json({\n        imageRef: imageRef\n      });\n    })\n    .catch(err => {\n      if (!err.statusCode) {\n        err.statusCode = 500;\n      }\n      next(err);\n    });\n};\n\nexports.getProfile = (req, res, next) => {\n  try {\n    models.User.findByPk(req.userId, {\n      include: [\n        {\n          model: models.Avatar,\n          attributes: [\"imageRef\"]\n        },\n        {\n          model: models.Address\n        }\n      ]\n    })\n      .then(user => {\n        user[\"password\"] = undefined;\n        if (!user) {\n          const error = new Error(\"Not found.\");\n          error.statusCode = 404;\n          throw error;\n        } else if (user.addresses.length < 1) {\n          user[\"addresses\"] = undefined;\n        }\n        res.status(200).json({\n          user: user\n        });\n      })\n      .catch(err => {\n        if (!err.statusCode) {\n          err.statusCode = 500;\n        }\n        next(err);\n      });\n  } catch (error) {}\n};\n\nexports.updateProfile = (req, res, next) => {\n  models.User.findByPk(req.userId)\n    .then(user => {\n      if (!user) {\n        const error = new Error(\"Not found.\");\n        error.statusCode = 404;\n        throw error;\n      }\n      user.update(req.body);\n      user[\"password\"] = undefined;\n      res.status(200).json({\n        user: user\n      });\n    })\n    .catch(err => {\n      if (!err.statusCode) {\n        err.statusCode = 500;\n      }\n      next(err);\n    });\n};\n\nexports.updateAdresse = (req, res, next) => {\n  models.Address.findOne({\n    where: { userId: req.userId }\n  })\n    .then(address => {\n      if (!address) {\n        models.Address.create(req.body).then(address => {\n          models.User.findByPk(req.userId).then(user => {\n            return user.setAddresses(address);\n          });\n        });\n      } else {\n        return address.update(req.body);\n      }\n    })\n    .then(address => {\n      if (!address) {\n        const error = new Error(\"Not found.\");\n        error.statusCode = 404;\n        throw error;\n      }\n      res.status(200).json({\n        address: address\n      });\n    })\n    .catch(err => {\n      if (!err.statusCode) {\n        err.statusCode = 500;\n      }\n      next(err);\n    });\n};\n\nexports.getAvatar = (req, res, next) => {\n  //models.Avatar.findByPk;\n  models.User.findByPk(req.userId, {\n    include: [\n      {\n        model: models.Avatar,\n        attributes: [\"imageRef\"]\n      }\n    ]\n  })\n    .then(user => {\n      if (!user) {\n        return res.status(202).json({\n          Avatar: null\n        });\n        // const error = new Error(\"Not found.\");\n        // error.statusCode = 404;\n        // throw error;\n      } else if (user.Avatar && user.Avatar.imageRef) {\n        return res.status(200).json({\n          Avatar: user.Avatar.imageRef\n        });\n      } else {\n        return res.status(200).json({\n          Avatar: null\n        });\n      }\n    })\n    .catch(err => {\n      if (!err.statusCode) {\n        err.statusCode = 500;\n      }\n      next(err);\n    });\n};\n"],"file":"user.js"}