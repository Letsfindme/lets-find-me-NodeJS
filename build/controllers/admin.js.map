{"version":3,"sources":["../../src/controllers/admin.js"],"names":["Product","require","exports","postAddProduct","req","res","next","body","title","price","description","files","error","Error","statusCode","console","log","status","json","message","models","create","imageUrl","path","product","putEditProduct","prodId","findByPk","save","savedProduct","result","err","getProducts","findAll","products","postDeleteProduct","deletedProduct","destroy"],"mappings":";;;;;;;;AAAA;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAAvB;AAEA;;;;;AAGAC,OAAO,CAACC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEiBF,GAAG,CAACG,IAFrB,EAEbC,KAFa,aAEbA,KAFa,EAENC,KAFM,aAENA,KAFM,EAECC,WAFD,aAECA,WAFD;;AAAA,gBAGhBN,GAAG,CAACO,KAAJ,CAAU,CAAV,CAHgB;AAAA;AAAA;AAAA;;AAIbC,YAAAA,KAJa,GAIL,IAAIC,KAAJ,CAAU,yCAAV,CAJK;AAKnBD,YAAAA,KAAK,CAACE,UAAN,GAAmB,GAAnB;AALmB,kBAMbF,KANa;;AAAA;AAAA,kBAQjB,CAACJ,KAAD,IAAU,CAACC,KAAX,IAAoB,CAACC,WARJ;AAAA;AAAA;AAAA;;AASnBK,YAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AATmB,6CAUZX,GAAG,CACPY,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAFD,CAVY;;AAAA;AAAA;AAAA,mBAcCC,mBAAOpB,OAAP,CAAeqB,MAAf,CAAsB;AAC1Cb,cAAAA,KAAK,EAALA,KAD0C;AAE1CC,cAAAA,KAAK,EAALA,KAF0C;AAG1Ca,cAAAA,QAAQ,EAAElB,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaY,IAHmB;AAI1Cb,cAAAA,WAAW,EAAXA;AAJ0C,aAAtB,CAdD;;AAAA;AAcfc,YAAAA,OAde;AAAA,6CAoBdnB,GAAG,CACPY,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEM,cAAAA,OAAO,EAAPA,OAAF;AAAWL,cAAAA,OAAO,EAAE;AAApB,aAFD,CApBc;;AAAA;AAAA;AAAA;AAwBrBd,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAArB;AACAJ,YAAAA,OAAO,CAACH,KAAR,CAAc,kCAAd,EAAkD,YAAMO,OAAxD;;AAzBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AA6BA;;;;;AAGAjB,OAAO,CAACuB,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,kBAAOrB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmCF,GAAG,CAACG,IAFvC,EAEbC,KAFa,cAEbA,KAFa,EAENC,KAFM,cAENA,KAFM,EAECC,WAFD,cAECA,WAFD,EAEcgB,MAFd,cAEcA,MAFd,EAEsBJ,QAFtB,cAEsBA,QAFtB;AAAA;AAAA,mBAGCF,mBAAOpB,OAAP,CAAe2B,QAAf,CAAwBD,MAAxB,CAHD;;AAAA;AAGfF,YAAAA,OAHe;AAIrBA,YAAAA,OAAO,CAAChB,KAAR,GAAgBA,KAAhB;AACAgB,YAAAA,OAAO,CAACf,KAAR,GAAgBA,KAAhB;AACAe,YAAAA,OAAO,CAACd,WAAR,GAAsBA,WAAtB;AACAc,YAAAA,OAAO,CAACF,QAAR,GAAmBlB,GAAG,CAACO,KAAJ,CAAU,CAAV,IAAeP,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaY,IAA5B,GAAmCD,QAAtD;AAPqB;AAAA,mBAQME,OAAO,CAACI,IAAR,EARN;;AAAA;AAQfC,YAAAA,YARe;AASrBxB,YAAAA,GAAG,CACAY,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AAAEY,cAAAA,MAAM,EAAED,YAAV;AAAwBV,cAAAA,OAAO,EAAE;AAAjC,aAFR;AATqB;AAAA;;AAAA;AAAA;AAAA;;AAarB,uBAAAY,GAAG;AAAA,qBAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAAJ;AAAA,aAAH;;AAbqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;;AAGA7B,OAAO,CAAC8B,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAsB,kBAAO5B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKc,mBAAOpB,OAAP,CAAeiC,OAAf,EAFL;;AAAA;AAEZC,YAAAA,QAFY;AAAA,8CAGX7B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,QAArB,CAHW;;AAAA;AAAA;AAAA;;AAKlB,uBAAAH,GAAG;AAAA,qBAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAAJ;AAAA,aAAH;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AASA;;;;;AAGA7B,OAAO,CAACiC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA4B,kBAAO/B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBoB,YAAAA,MAFkB,GAETtB,GAAG,CAACG,IAAJ,CAASmB,MAFA;AAAA;AAAA,mBAGFN,mBAAOpB,OAAP,CAAe2B,QAAf,CAAwBD,MAAxB,CAHE;;AAAA;AAGlBF,YAAAA,OAHkB;;AAIxB,gBAAI,CAACA,OAAL,EAAc;AACZnB,cAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEkB,gBAAAA,cAAc,EAAdA,cAAF;AAAkBjB,gBAAAA,OAAO,EAAE;AAA3B,eAArB;AACD;;AANuB;AAAA,mBAOKK,OAAO,CAACa,OAAR,EAPL;;AAAA;AAOlBD,YAAAA,cAPkB;AAQxB/B,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEkB,cAAAA,cAAc,EAAdA,cAAF;AAAkBjB,cAAAA,OAAO,EAAE;AAA3B,aAArB;AARwB;AAAA;;AAAA;AAAA;AAAA;AAUxBJ,YAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA1B,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAArB;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import models from \"../setup/models\";\nconst Product = require(\"../models/product\");\n\n/**\n * Create new product by admin auth\n */\nexports.postAddProduct = async (req, res, next) => {\n  try {\n    const { title, price, description } = req.body;\n    if (!req.files[0]) {\n      const error = new Error(\"No image provided or user not registred\");\n      error.statusCode = 422;\n      throw error;\n    }\n    if (!title || !price || !description) {\n      console.log(\"message: Body is empty! error creating product!\");\n      return res\n        .status(400)\n        .json({ message: \"Body is empty! error creating product!\" });\n    }\n    const product = await models.Product.create({\n      title,\n      price,\n      imageUrl: req.files[0].path,\n      description\n    });\n    return res\n      .status(201)\n      .json({ product, message: \"success created product!\" });\n  } catch (error) {\n    res.status(500).json({ message: \"error creating product!\" });\n    console.error(\"message: error creating product!\", error.message);\n  }\n};\n\n/**\n * Admin update exesiting product\n */\nexports.putEditProduct = async (req, res, next) => {\n  try {\n    const { title, price, description, prodId, imageUrl } = req.body;\n    const product = await models.Product.findByPk(prodId);\n    product.title = title;\n    product.price = price;\n    product.description = description;\n    product.imageUrl = req.files[0] ? req.files[0].path : imageUrl;\n    const savedProduct = await product.save();\n    res\n      .status(200)\n      .json({ result: savedProduct, message: \"product update success\" });\n  } catch (error) {\n    err => console.log(err);\n  }\n};\n\n/**\n * Admin get all products\n */\nexports.getProducts = async (req, res, next) => {\n  try {\n    const products = await models.Product.findAll();\n    return res.status(200).json(products);\n  } catch (error) {\n    err => console.log(err);\n  }\n};\n\n/**\n * Admin delete a product by id\n */\nexports.postDeleteProduct = async (req, res, next) => {\n  try {\n    const prodId = req.body.prodId;\n    const product = await models.Product.findByPk(prodId);\n    if (!product) {\n      res.status(400).json({ deletedProduct, message: \"Not found!!\" });\n    }\n    const deletedProduct = await product.destroy();\n    res.status(200).json({ deletedProduct, message: \"DESTROYED PRODUCT\" });\n  } catch (error) {\n    console.log(err);\n    res.status(500).json({ message: \"Can't delete :/\" });\n  }\n};\n"],"file":"admin.js"}