{"version":3,"sources":["../../src/routes/auth.js"],"names":["express","require","body","authController","isAuth","router","Router","put","isEmail","withMessage","custom","value","req","User","findAll","where","email","then","user","length","Promise","reject","normalizeEmail","trim","isLength","min","signup","post","login","get","getUserStatus","patch","not","isEmpty","updateUserStatus","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eAGIA,OAAO,CAAC,mBAAD,C;IADTC,I,YAAAA,I,EAGF;;;AACA,IAAMC,cAAc,GAAGF,OAAO,CAAC,qBAAD,CAA9B;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,8BAAD,CAAtB;;AAEA,IAAMI,MAAM,GAAGL,OAAO,CAACM,MAAR,EAAf;AAEAD,MAAM,CAACE,GAAP,CACE,SADF,EAEE,CACEL,IAAI,CAAC,OAAD,CAAJ,CACCM,OADD,GAECC,WAFD,CAEa,6BAFb,EAGCC,MAHD,CAGQ,UAACC,KAAD,QAEF;AAAA,MADJC,GACI,QADJA,GACI;AACJ,SAAOC,IAAI,CAACC,OAAL,CAAa;AAClBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEL;AADF;AADW,GAAb,EAIJM,IAJI,CAIC,UAAAC,IAAI,EAAI;AACd,QAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AACpB,aAAOC,OAAO,CAACC,MAAR,CAAe,gCAAf,CAAP;AACD;AACF,GARM,CAAP;AASD,CAfD,EAgBCC,cAhBD,EADF,EAkBEpB,IAAI,CAAC,UAAD,CAAJ,CACCqB,IADD,GAECC,QAFD,CAEU;AACRC,EAAAA,GAAG,EAAE;AADG,CAFV,CAlBF,CAFF,EA0BEtB,cAAc,CAACuB,MA1BjB;AA6BArB,MAAM,CAACsB,IAAP,CAAY,QAAZ,EAAsBxB,cAAc,CAACyB,KAArC;AAEAvB,MAAM,CAACwB,GAAP,CAAW,SAAX,EAAsBzB,MAAtB,EAA8BD,cAAc,CAAC2B,aAA7C;AAEAzB,MAAM,CAAC0B,KAAP,CACE,SADF,EAEE3B,MAFF,EAGE,CACEF,IAAI,CAAC,QAAD,CAAJ,CACCqB,IADD,GAECS,GAFD,GAGCC,OAHD,EADF,CAHF,EASE9B,cAAc,CAAC+B,gBATjB;AAYAC,MAAM,CAACC,OAAP,GAAiB/B,MAAjB","sourcesContent":["const express = require('express');\nconst {\n  body\n} = require('express-validator');\n\n//const User = require('../models/user');\nconst authController = require('../controllers/auth');\nconst isAuth = require(\"../middleware/authentication\");\n\nconst router = express.Router();\n\nrouter.put(\n  '/signup',\n  [\n    body('email')\n    .isEmail()\n    .withMessage('Please enter a valid email.')\n    .custom((value, {\n      req\n    }) => {\n      return User.findAll({\n        where: {\n          email: value\n        }\n      }).then(user => {\n        if (user.length != 0) {\n          return Promise.reject('E-Mail address already exists!');\n        }\n      });\n    })\n    .normalizeEmail(),\n    body('password')\n    .trim()\n    .isLength({\n      min: 5\n    })\n  ],\n  authController.signup\n);\n\nrouter.post('/login', authController.login);\n\nrouter.get('/status', isAuth, authController.getUserStatus);\n\nrouter.patch(\n  '/status',\n  isAuth,\n  [\n    body('status')\n    .trim()\n    .not()\n    .isEmpty()\n  ],\n  authController.updateUserStatus\n);\n\nmodule.exports = router;"],"file":"auth.js"}